# Nginx 호스팅 설정 - 사용자: {{ user_id }}
# 생성 시간: {{ ansible_date_time.epoch | default('') }}

# 웹 서비스 프록시 설정
location /{{ user_id }} {
    # VM으로 프록시 패스
    proxy_pass http://{{ vm_ip }}:{{ vm_port }};
    
    # 프록시 헤더 설정
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # 웹소켓 지원 (선택사항)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # 타임아웃 설정
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # 버퍼링 설정
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # 캐싱 설정 (정적 파일용)
    location ~* /{{ user_id }}/.*\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://{{ vm_ip }}:{{ vm_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 정적 파일 캐싱
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Served-By "nginx-proxy";
    }
    
    # 에러 페이지 설정
    proxy_intercept_errors on;
    error_page 502 503 504 /{{ user_id }}/error/502.html;
    error_page 404 /{{ user_id }}/error/404.html;
    
    # 보안 헤더 추가
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 파일 업로드 크기 제한
    client_max_body_size 100M;
    
    # 로깅 (선택사항)
    access_log /var/log/nginx/{{ user_id }}_access.log combined;
    error_log /var/log/nginx/{{ user_id }}_error.log;
}

# 사용자별 에러 페이지 location
location /{{ user_id }}/error/ {
    internal;
    root /var/www/html/errors;
    try_files $uri /default/error.html;
} 