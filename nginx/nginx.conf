# 웹 호스팅 서비스 메인 Nginx 설정 (Docker용)
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 포맷
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 파일 업로드 크기 제한
    client_max_body_size 100M;
    
    # 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 업스트림 백엔드 정의
    upstream backend {
        server backend:8000;
    }
    
    # 메인 서버 블록
    server {
        listen 80 default_server;
        server_name localhost;
        
        # 보안 헤더
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        
        # API 프록시 (백엔드 서버로)
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # CORS 헤더
            add_header Access-Control-Allow-Origin "http://localhost:3000" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # OPTIONS 요청 처리
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # 메인 페이지
        location = / {
            return 200 '<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>웹 호스팅 서비스</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
        .header { text-align: center; margin-bottom: 40px; }
        .status { background: #e8f5e8; padding: 20px; border-radius: 8px; margin: 20px 0; }
        .api-list { background: #f5f5f5; padding: 20px; border-radius: 8px; }
        .endpoint { margin: 10px 0; font-family: monospace; }
    </style>
</head>
<body>
    <div class="header">
        <h1>🚀 웹 호스팅 서비스</h1>
        <p>Docker 환경에서 실행 중</p>
    </div>
    
    <div class="status">
        <h3>✅ 서비스 상태</h3>
        <p>Nginx 프록시: 정상 동작</p>
        <p>백엔드 API: 연결됨</p>
        <p>데이터베이스: 연결됨</p>
    </div>
    
    <div class="api-list">
        <h3>📋 API 엔드포인트</h3>
        <div class="endpoint">GET /api/v1/auth/me</div>
        <div class="endpoint">POST /api/v1/auth/register</div>
        <div class="endpoint">POST /api/v1/auth/login</div>
        <div class="endpoint">POST /api/v1/host</div>
        <div class="endpoint">GET /api/v1/host/my</div>
        <div class="endpoint">DELETE /api/v1/host/my</div>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
        
        # 정적 파일 캐싱
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx";
        }
        
        # 히든 파일 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # robots.txt
        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /";
            add_header Content-Type text/plain;
        }
        
        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            return 204;
        }
    }
    
    # 사용자별 호스팅 설정 포함
    include /etc/nginx/sites-available/hosting/*.conf;
} 